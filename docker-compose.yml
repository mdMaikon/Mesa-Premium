# Docker Compose V2 - version tag removido (obsoleto)

services:
  # FastAPI Application
  api:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: mesa_premium_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - CORS_ORIGINS=http://localhost,http://localhost:8000,http://localhost:80
    volumes:
      - ./fastapi/logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - mesa_premium_network
    # Não expor porta diretamente - será acessada via Nginx
    expose:
      - "8000"

  # MySQL Database (Local para desenvolvimento)
  mysql:
    image: mysql:8.0
    container_name: mesa_premium_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - mesa_premium_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache (Opcional - para futuro)
  redis:
    image: redis:7-alpine
    container_name: mesa_premium_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - mesa_premium_network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mesa_premium_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
    networks:
      - mesa_premium_network

networks:
  mesa_premium_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
